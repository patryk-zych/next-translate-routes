import { Rewrite } from 'next/dist/lib/load-custom-routes'
import React, { useEffect, useState } from 'react'

import Layout from '../components/Layout'

type TRewrites = Record<'beforeFiles' | 'afterFiles', Rewrite[]>

const getRewrites = () =>
  typeof window !== 'undefined' && (window?.__BUILD_MANIFEST?.__rewrites as unknown as TRewrites)?.afterFiles

const rewritesAvailable = (rewrites: number | Rewrite[]): rewrites is Rewrite[] => typeof rewrites === 'object'

const RewritesPage = () => {
  const [rewrites, setRewrites] = useState<number | Rewrite[]>(0)

  useEffect(() => {
    if (!rewritesAvailable(rewrites)) {
      const newRewrites = getRewrites()
      if (rewritesAvailable(newRewrites)) {
        setRewrites(newRewrites)
      } else {
        const timeout = setTimeout(() => {
          setRewrites((prevRewrites) => {
            if (rewritesAvailable(prevRewrites)) {
              return prevRewrites
            }
            return prevRewrites + 1
          })
        }, 100)
        return () => clearTimeout(timeout)
      }
    }
    return undefined
  }, [rewrites])

  return (
    <Layout title="Rewrites | next-translate-routes Example">
      <h1>Rewrites</h1>
      {rewritesAvailable(rewrites) ? (
        <>
          <p>Here are the rewrites automatically generated by next-translate-routes:</p>
          <ul
            style={{ background: '#222', color: '#ddd', fontFamily: 'monospace', padding: '20px', listStyle: 'none' }}
          >
            {'['}
            {rewrites.map((rewrite, i) => (
              <li key={i} style={{ marginLeft: '20px' }}>
                {'{'}
                {Object.entries(rewrite).map(([key, value]) => (
                  <p style={{ margin: '5px 20px' }} key={key}>{`${key}: '${value}',`}</p>
                ))}
                {'},'}
              </li>
            ))}
            {']'}
          </ul>
        </>
      ) : (
        <p>Waiting for rewrites to be available...</p>
      )}
    </Layout>
  )
}

export default RewritesPage
